#version 430

layout (local_size_x = 16, local_size_y = 1, local_size_z = 1) in;

struct Vertex {
    vec4 position;
    vec4 normal;
    vec4 color;
    vec2 texCoord;
    float padding1;
    float padding2;
};

layout (std430, binding = 0) buffer InVertices {
    Vertex inVertices[];
};

layout (std430, binding = 1) buffer OutVertices {
    Vertex outVertices[];
};

void main() {
    uint index = gl_GlobalInvocationID.x;

    if (index >= inVertices.length()) {
        return; // Early exit if the index is out of bounds
    }

    Vertex v = inVertices[index];
    outVertices[index].position.x = v.position.x + 0.0001; // Copy all fields from input to output
}
